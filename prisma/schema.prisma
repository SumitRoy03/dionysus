// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    previewFeatures = ["postgresqlExtensions"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    extensions = [vector]
}
model User {
    id String @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    imageUrl String?
    firstName String?
    lastname String?

    emailAddress String @unique

    credits Int @default(150) 

    userToProjects UserToProjects[]
}

model Project {
    id String @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name String
    githubUrl String

    deletedAt DateTime?

    usertoProjects UserToProjects[]

    commits Commit[]

    sourceCodeEmbedding SourceCodeEmbedding[]
}

// Many to Many relationship
model UserToProjects {
    id String @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user User @relation(fields: [userId], references: [id])
    userId String

    project Project @relation(fields: [projectId], references: [id])
    projectId String
}

model Commit {
    id String @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    commitMessage String
    commitHash String
    commitAuthorName String
    commitAuthorAvatar String
    commitDate DateTime

    summary String


    project Project @relation(fields: [projectId], references: [id])
    projectId String
}

model SourceCodeEmbedding {
    id String @id @default(cuid())

    summaryEmbedding Unsupported("vector(768)")?
    sourceCode String
    fileName String
    summary String

    project Project @relation(fields: [projectId], references: [id])
    projectId String
}


